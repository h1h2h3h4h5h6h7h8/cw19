@model App.Domain.Core.Memory.Entities.Member
@using App.Domain.Core.Memory.Entities.Enum

@{
    ViewData["Title"] = "ایجاد عضو جدید";
}

<h1>ایجاد عضو جدید</h1>

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">
        @TempData["Error"]
    </div>
}

@if (TempData["Success"] != null)
{
    <div class="alert alert-success">
        @TempData["Success"]
    </div>
}

@using (Html.BeginForm("Create", "Member", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-group">
        @Html.LabelFor(m => m.FirstName)
        @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.LastName)
        @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.NationalCode)
        @Html.TextBoxFor(m => m.NationalCode, new { @class = "form-control" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.BirthDate)
        @Html.TextBoxFor(m => m.BirthDate, "{0:yyyy-MM-dd}", new { @class = "form-control" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Gender)
        @Html.DropDownListFor(m => m.Gender, new List<SelectListItem>
    {
    new SelectListItem { Text = "انتخاب کنید", Value = "" },
    new SelectListItem { Text = "مرد", Value = Gender.Male.ToString() },
    new SelectListItem { Text = "زن", Value = Gender.Female.ToString() }
    }, new { @class = "form-control" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Score)
        @Html.TextBoxFor(m => m.Score, new { @class = "form-control" })
    </div>

    <button type="submit" class="btn btn-primary">ثبت عضو جدید</button>
}

<a href="@Url.Action("Index", "Member")">بازگشت به لیست اعضا</a>
